import java.io.*;
import java.util.*;

// Parent class for bank accounts
class BankAccount {
    protected String accountNumber;
    protected String accountHolderName;
    protected double balance;

    public BankAccount(String accountNumber, String accountHolderName, double balance) {
        this.accountNumber = accountNumber;
        this.accountHolderName = accountHolderName;
        this.balance = balance;
    }

    public void displayAccountDetails() {
        System.out.println("Account Number: " + accountNumber);
        System.out.println("Account Holder Name: " + accountHolderName);
        System.out.println("Balance: " + balance);
    }

    public void deposit(double amount) {
        balance += amount;
        System.out.println("Deposit of " + amount + " successful.");
    }

    public void withdraw(double amount) {
        if (balance >= amount) {
            balance -= amount;
            System.out.println("Withdrawal of " + amount + " successful.");
        } else {
            System.out.println("Insufficient funds.");
        }
    }
}

// Savings account class, inherits from BankAccount
class SavingsAccount extends BankAccount {
    private double interestRate;

    public SavingsAccount(String accountNumber, String accountHolderName, double balance, double interestRate) {
        super(accountNumber, accountHolderName, balance);
        this.interestRate = interestRate;
    }

    @Override
    public void displayAccountDetails() {
        super.displayAccountDetails();
        System.out.println("Interest Rate: " + interestRate);
    }
}

// Checking account class, inherits from BankAccount
class CheckingAccount extends BankAccount {
    private double overdraftLimit;

    public CheckingAccount(String accountNumber, String accountHolderName, double balance, double overdraftLimit) {
        super(accountNumber, accountHolderName, balance);
        this.overdraftLimit = overdraftLimit;
    }

    @Override
    public void displayAccountDetails() {
        super.displayAccountDetails();
        System.out.println("Overdraft Limit: " + overdraftLimit);
    }
}

// Interface for bank operations
interface BankOperations {
    void displayAccountDetails();
    void deposit(double amount);
    void withdraw(double amount);
}

// Mobile banking system class
class MobileBankingSystem {
    private ArrayList<BankAccount> bankAccounts;
    private static final String FILENAME = "bank_accounts.txt";

    public MobileBankingSystem() {
        bankAccounts = new ArrayList<>();
    }

    public void addBankAccount(BankAccount account) {
        bankAccounts.add(account);
    }

    public void displayAllAccounts() {
        for (BankAccount account : bankAccounts) {
            account.displayAccountDetails();
            System.out.println();
        }
    }

    public void saveAccountsToFile() {
        try {
            FileWriter fileWriter = new FileWriter(FILENAME);
            PrintWriter printWriter = new PrintWriter(fileWriter);

            for (BankAccount account : bankAccounts) {
                printWriter.println(account.accountNumber);
                printWriter.println(account.accountHolderName);
                printWriter.println(account.balance);
                printWriter.println();
            }

            printWriter.close();
            System.out.println("Bank accounts saved to file: " + FILENAME);
        } catch (IOException e) {
            System.out.println("Error saving bank accounts to file: " + e.getMessage());
        }
    }

    public void loadAccountsFromFile() {
        try {
            bankAccounts.clear();

            FileReader fileReader = new FileReader(FILENAME);
            BufferedReader bufferedReader = new BufferedReader(fileReader);

            String line;
            String accountNumber = "";
            String accountHolderName = "";
            double balance = 0;

            while ((line = bufferedReader.readLine()) != null) {
                if (accountNumber.isEmpty()) {
                    accountNumber = line;
                } else if (accountHolderName.isEmpty()) {
                    accountHolderName = line;
                } else if (balance == 0) {
                    balance = Double.parseDouble(line);
                } else if (line.isEmpty()) {
                    BankAccount account = new BankAccount(accountNumber, accountHolderName, balance);
                    bankAccounts.add(account);
                    accountNumber = "";
                    accountHolderName = "";
                    balance = 0;
                }
            }

            bufferedReader.close();
            System.out.println("Bank accounts loaded from file: " + FILENAME);
        } catch (IOException e) {
            System.out.println("Error loading bank accounts from file: " + e.getMessage());
        }
    }
}

// Main class
public class Main {
    public static void main(String[] args) {
        MobileBankingSystem bankingSystem = new MobileBankingSystem();

        // Creating bank accounts
        BankAccount account1 = new SavingsAccount("SA001", "John Doe", 5000, 0.05);
        BankAccount account2 = new CheckingAccount("CA001", "Jane Smith", 3000, 1000);
        bankingSystem.addBankAccount(account1);
        bankingSystem.addBankAccount(account2);

        // Displaying all accounts
        bankingSystem.displayAllAccounts();

        // Depositing and withdrawing funds
        account1.deposit(1000);
        account1.withdraw(2000);

        // Saving accounts to file
        bankingSystem.saveAccountsToFile();

        // Loading accounts from file
        bankingSystem.loadAccountsFromFile();

        // Displaying all accounts after loading
        bankingSystem.displayAllAccounts();
    }
  }
